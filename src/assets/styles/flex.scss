/* ========================================================================
   Component: Flex
 ========================================================================== */

.flex {
  display: flex;
}
.flex-inline {
  display: inline-flex;
}

/*
  * Remove pseudo elements created by micro clearfix as precaution
  */

.flex::before,
.flex::after,
.flex-inline::before,
.flex-inline::after {
  display: none;
}

/* Alignment
  ========================================================================== */

/*
  * Align items along the main axis of the current line of the flex container
  * Row: Horizontal
  */

// Default
.flex-left {
  justify-content: flex-start;
}
.flex-center {
  justify-content: center;
}
.flex-right {
  justify-content: flex-end;
}
.flex-between {
  justify-content: space-between;
}
.flex-around {
  justify-content: space-around;
}

/*
  * Align items in the cross axis of the current line of the flex container
  * Row: Vertical
  */

// Default
.flex-stretch {
  align-items: stretch;
}
.flex-top {
  align-items: flex-start;
}
.flex-middle {
  align-items: center;
}
.flex-bottom {
  align-items: flex-end;
}

/* Direction
  ========================================================================== */

// Default
.flex-row {
  flex-direction: row;
}
.flex-row-reverse {
  flex-direction: row-reverse;
}
.flex-column {
  flex-direction: column;
}
.flex-column-reverse {
  flex-direction: column-reverse;
}

/* Wrap
  ========================================================================== */

// Default
.flex-nowrap {
  flex-wrap: nowrap;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

/*
  * Aligns items within the flex container when there is extra space in the cross-axis
  * Only works if there is more than one line of flex items
  */

// Default
.flex-wrap-stretch {
  align-content: stretch;
}
.flex-wrap-top {
  align-content: flex-start;
}
.flex-wrap-middle {
  align-content: center;
}
.flex-wrap-bottom {
  align-content: flex-end;
}
.flex-wrap-between {
  align-content: space-between;
}
.flex-wrap-around {
  align-content: space-around;
}

/* Item ordering
  ========================================================================== */

/*
  * Default is 0
  */

.flex-first {
  order: -1;
}
.flex-last {
  order: 99;
}

/* Item dimensions
  ========================================================================== */

/*
  * Initial: 0 1 auto
  * Content dimensions, but shrinks
  */

/*
  * No Flex: 0 0 auto
  * Content dimensions
  */

.flex-none {
  flex: none;
}

/*
  * Relative Flex: 1 1 auto
  * Space is allocated considering content
  */

.flex-auto {
  flex: auto;
}

/*
  * Absolute Flex: 1 1 0%
  * Space is allocated solely based on flex
  */

.flex-1 {
  flex: 1;
}

.grid {
  display: grid;
}
@media only screen and (max-width: 767px) {
  .grid-cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }
}
@media only screen and (min-width: 768px) {
  .sm-grid-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media only screen and (min-width: 992px) {
  .md-grid-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media only screen and (min-width: 1200px) {
  .lg-grid-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }
}
@media only screen and (min-width: 1480px) {
  .xl-grid-cols-5 {
    grid-template-columns: repeat(5, 1fr);
  }
}
.card-gap {
  gap: var(--cardGap);
}
